---
# This file is used to generate the bulk of the Dockerfile using ansible-builder

version: 3

images:
  base_image:
    name: registry.access.redhat.com/ubi9/ubi-minimal:latest

dependencies:
  python_interpreter:
    package_system: python3
  ansible_core:
    package_pip: ansible-core==2.15.9
  ansible_runner:
    package_pip: ansible-runner==2.3.4
  python: requirements.txt
  system: bindep.txt

options:
  package_manager_path: /usr/bin/microdnf

additional_build_files:
  - src: main.tf
    dest: tofu_setup

additional_build_steps:
  prepend_base:
    # Give the user with UID 1000 a name
    # wget to pull terraform
    - RUN microdnf install shadow-utils wget unzip -y
    - |
        RUN groupadd --gid 1000 runner && \
        useradd \
          --create-home \
          --home-dir /home/runner \
          --no-user-group \
          --gid 1000 \
          --shell /sbin/nologin \
          --uid 1000 \
          runner
    - |
        ARG opentofu_version=1.6.0
        RUN wget https://github.com/opentofu/opentofu/releases/download/v${opentofu_version}/tofu_${opentofu_version}_linux_amd64.zip && \
          unzip tofu_${opentofu_version}_linux_amd64.zip && rm tofu_${opentofu_version}_linux_amd64.zip && \
          mv tofu /usr/local/bin

  # add these at the end, so we run in the correct user context
  append_base:
    - |
        ENV TF_PLUGIN_CACHE_DIR=/home/runner/.terraform.d/plugin-cache
        RUN mkdir -p $TF_PLUGIN_CACHE_DIR && mkdir -p /home/runner/tofu_setup
        COPY _build/tofu_setup/main.tf /home/runner/tofu_setup/main.tf
        RUN cd /home/runner/tofu_setup && tofu init
  prepend_builder:
    - RUN $PYCMD -m pip install -U pip
    # We don't want these in the final container - only the builder
    # It is required to build the wheel for netifaces
    - RUN microdnf install gcc python3-devel -y
    - RUN microdnf upgrade --refresh --best --nodocs --noplugins --setopt=install_weak_deps=0 -y
